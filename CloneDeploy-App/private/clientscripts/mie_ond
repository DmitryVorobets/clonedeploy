#!/bin/bash

. /usr/local/bin/mie_global_functions

is_ondemand="true"
taskType=$(dialog --backtitle "CloneDeploy" --title "Select A Task" --clear --menu "" 20 60 15 1 Deploy 2 Upload --stdout)

if [ "$taskType" != "1" ] && [ "$taskType" != "2" ]; then
	error "Could Not Determine Task Type"
fi

if [ "$taskType" = "1" ]; then    
	imageList=`$curlAuth --data "environment=macOS&computerId=$computer_id&task=deploy&userId=$user_id" "${web}ListImages" $curlEnd`
	imageId=$(dialog --backtitle "CloneDeploy" --title "Select An Image" --clear --menu "" 20 60 15 `parse_json "$imageList" .Images[]` --stdout)
	if [ -z "$imageId" ]; then
	  error "No Image Was Selected Or No Images Have Been Added Yet"
	fi
	imageProfileList=`$curlAuth --data "imageId=$imageId" "${web}ListImageProfiles" $curlEnd`
	if [ "`parse_json "$imageProfileList" .Count`" = "1" ]; then
		image_profile_id=`parse_json "$imageProfileList" .FirstProfileId`
	else
		image_profile_id=$(dialog --backtitle "CloneDeploy" --title "Select An Image Profile" --clear --menu "" 20 60 15 `parse_json "$imageProfileList" .ImageProfiles[]` --stdout)
	fi
	
	if [ "$computer_id" = "false" ]; then
	  task="unregdeploy"
	else
	  task="onddeploy"
	fi

elif [ "$taskType" = "2" ]; then 
  new_or_existing=$(dialog --backtitle "CloneDeploy" --title "New Or Existing?" --clear --menu "" 20 60 15 1 "New Image" 2 "Existing Image" --stdout)

  if [ "$new_or_existing" != "1" ] && [ "$new_or_existing" != "2" ]; then
	error "Could Not Determine If This Is A New Or Existing Image"
  fi
  
  if [ "$new_or_existing" = "1" ]; then
    while [ "$isError" != "false" ]; do
	  if [ "$isError" = "true" ]; then
	    new_image_name=$(dialog --backtitle "CloneDeploy" --title "Enter Image Name" --clear --inputbox "Invalid Name.  Enter An Image Name" 20 60 --stdout)
	  else
	     new_image_name=$(dialog --backtitle "CloneDeploy" --title "Enter Image Name" --clear --inputbox "Enter An Image Name" 20 60 --stdout)
	  fi	
	  
	  if [ -z "$new_image_name" ]; then
	    error "No Image Name Entered"
	  fi
	  
		addImageResult=$($curlAuth --data "name=$new_image_name" ${web}AddImageOsxEnv $curlClose)
		if [ ! "$?" = "0" ]; then
			error "Could Not Add Image: $addImageResult"
		else
			if [ "$(parse_json "$addImageResult" .Success)" = "true" ]; then
			  image_id="$(parse_json "$addImageResult" .Id)"
			  isError="false"
			else
			  isError="true"
			fi
		fi
   done
  else
    image_list=`$curlAuth --data "environment=macOS&computerId=$computer_id&task=upload&userId=$user_id" "${web}ListImages" $curlEnd`
    image_id=$(dialog --backtitle "CloneDeploy" --title "Select An Image" --clear --menu "" 20 60 15 `parse_json "$image_list" .Images[]` --stdout)
  fi
  
  if [ -z "$image_id" ]; then
	  error "No Image Was Selected Or No Images Have Been Added Yet"
  fi
  profile_list=`$curlAuth --data "imageId=$image_id" "${web}ListImageProfiles" $curlEnd`
  if [ "$(parse_json "$profile_list" .Count)" = "1" ]; then
    image_profile_id=`parse_json "$profile_list" .FirstProfileId`
  else
    image_profile_id=$(dialog --backtitle "CloneDeploy" --title "Select An Image Profile" --clear --menu "" 20 60 15 `parse_json "$profile_list" .ImageProfiles[]` --stdout)
  fi
  
  if [ "$computer_id" = "false" ]; then
	  task="unregupload"
	else
	  task="ondupload"
  fi

else
	error "An Error Occurred Or No Task Was Selected"
fi
  

